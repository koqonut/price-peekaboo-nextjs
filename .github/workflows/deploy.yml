---
name: Deploy Next.js TypeScript App to S3 bucket and Invalidate CloudFront
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Install dependencies
        run: |
          echo "Started npm install"
          npm install
          echo "Completed npm install"
      - name: Build Next.js app
        run: |
          echo "Started npm build"
          npm run build
          echo "Completed npm build"
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Sts GetCallerIdentity
        run: |
          echo "Started GetCallerIdentity"
          aws sts get-caller-identity
          echo "Completed GetCallerIdentity"
      - name: Delete S3 bucket contents
        run: |
          echo "Deleting contents of S3 bucket..."
          aws s3 rm s3://${{ secrets.AWS_S3_BUCKET }} --recursive
          echo "Completed deletion of contents of S3 bucket..."
      - name: Deploy to S3
        run: |
          echo "Starting deployment to S3..."
          aws s3 sync out s3://${{ secrets.AWS_S3_BUCKET }}/ --delete
          echo "Completed deployment to S3..."
      - name: Invalidate CloudFront Cache
        run: >
          echo "Starting CloudFront cache invalidation..."


          if [[ -n "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}" ]]; then
            echo "Invalidating CloudFront cache..."
            aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          else
            echo "AWS_CLOUDFRONT_DISTRIBUTION_ID secret not provided. Skipping CloudFront cache invalidation."
          fi

          echo "Completed CloudFront cache invalidation"
